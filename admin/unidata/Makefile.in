### @configure_input@

# Copyright (C) 2012-2014 Free Software Foundation, Inc.

# Copyright (C) 2005, 2006, 2007, 2008, 2009, 2010, 2011
#   National Institute of Advanced Industrial Science and Technology (AIST)
#   Registration Number H13PRO009
#
# This file is part of GNU Emacs.

# GNU Emacs is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.

# GNU Emacs is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with GNU Emacs.  If not, see <http://www.gnu.org/licenses/>.

SHELL = @SHELL@
SED = @SED@

srcdir = @srcdir@
top_srcdir = @top_srcdir@
top_builddir = @top_builddir@

EMACS = ${top_builddir}/src/emacs
DSTDIR = ${top_srcdir}/lisp/international
unidir = ${DSTDIR}
emacs = "${EMACS}" -batch --no-site-file --no-site-lisp

.PHONY: all compile install unifiles

# unifiles depends on '${unidir}/charprop.el', which is an another name for
# '${DSTDIR}/charprop.el', which used to be listed under here:
all: ${top_srcdir}/src/macuvs.h unifiles

## Specify .elc as an order-only prereq so as to not needlessly rebuild
## target just because the .elc is missing.
## Same with charprop.el below.
${top_srcdir}/src/macuvs.h: ${srcdir}/uvs.el ${srcdir}/IVD_Sequences.txt | \
  ${srcdir}/uvs.elc
	${emacs} -L ${srcdir} -l uvs \
	  --eval '(uvs-print-table-ivd (unmsys--file-name "${srcdir}/IVD_Sequences.txt") "Adobe-Japan1")' \
	  > $@

.el.elc:
	${emacs} -f batch-byte-compile $<

unidata.txt: ${srcdir}/UnicodeData.txt
	$(SED) -e 's/\([^;]*\);\(.*\)/(#x\1 "\2")/' -e 's/;/" "/g' < $< > $@

compile: ${srcdir}/unidata-gen.elc

@ifGNUmake@FORCE =
@ifGNUmake@FORCE:
@ifGNUmake@.PHONY: FORCE

## Depend on .el rather than .elc so as not to needlessly rebuild
## uni-*.el files just because .elc is missing.
## Same for UnicodeData.txt v unidata.txt.
${DSTDIR}/charprop.el: ${srcdir}/unidata-gen.el ${srcdir}/UnicodeData.txt
	${MAKE} ${MFLAGS} compile unidata.txt EMACS="${EMACS}"
	-if [ -f "$@" ]; then \
	  cd ${DSTDIR} && chmod +w charprop.el `$(SED) -n 's/^;; FILE: //p' < charprop.el`; \
	fi
	${emacs} -L ${srcdir} -l unidata-gen -f unidata-gen-files \
	  ${srcdir} "${DSTDIR}"

## Like the above, but generate in PWD rather than lisp/international.
charprop.el: ${srcdir}/unidata-gen.elc unidata.txt
	${emacs} -L ${srcdir} -l unidata-gen -f unidata-gen-files \
	  ${srcdir}

## Check for deleted uni- files, and if any such, force a rebuild.
## Perhaps a more elegant way would be for the previous rule
## to generate a Makefile fragment explicitly listing the uni- files,
## which this file could include.  If no fragment, rebuild everything.
unifiles: ${unidir}/charprop.el
	for f in `$(SED) -n 's/^;; FILE: //p' < $<`; do \
	  [ -f ${unidir}/$${f} ] || { ${MAKE} $< FORCE=FORCE || exit 1; break; };\
	done

.PHONY: clean bootstrap-clean distclean maintainer-clean extraclean

install: charprop.el
	cp -v charprop.el ${DSTDIR}
	cp -v `$(SED) -n 's/^;; FILE: //p' < charprop.el` ${DSTDIR}

clean:
	if test -f charprop.el; then \
	  rm -f `$(SED) -n 's/^;; FILE: //p' < charprop.el`; \
	fi
	rm -f charprop.el ${srcdir}/*.elc unidata.txt

bootstrap-clean: clean

distclean: clean
	if test -e Makefile; then rm -f Makefile; fi

maintainer-clean: distclean

## Do not remove these files, even in a bootstrap, because they rarely
## change and it slows down bootstrap (a tiny bit).
## C.f. leim/ja-dic (which is much slower).
extraclean:
	if test -f ${top_srcdir}/src/macuvs.h; then \
	  rm -f ${top_srcdir}/src/macuvs.h; \
	fi
	if test -f ${DSTDIR}/charprop.el; then \
	  (cd ${DSTDIR} && rm -f `$(SED) -n 's/^;; FILE: //p' < charprop.el`); \
	  rm -f ${DSTDIR}/charprop.el; \
	fi
